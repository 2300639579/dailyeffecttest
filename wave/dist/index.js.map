{"version":3,"sources":["webpack:///webpack/bootstrap 4d0cf5696079ffe60414","webpack:///./index.js","webpack:///./time.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7D0B;AAC1B;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,iB;AACA;AACA;AACA;;;AAGA,4BAA4B;AAC5B,+E;AACA;;AAEA;;AAEA;;AAEA,8B;AACA,uB;AACA,0B;AACA,iB;;AAEA,kF;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,SAAS;;;AAGT;AACA,uBAAuB,oBAAoB;AAC3C,2BAA2B,oBAAoB;;AAE/C;AACA,+CAA+C;AAC/C;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC;;AAEvC,yGAAyG;AACzG,4CAA4C;AAC5C,oCAAoC;AACpC;;AAEA,iDAAiD,8BAA8B,EAAE;AACjF;AACA;AACA,6EAA6E;AAC7E;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;AAKD;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA,CAAC;;AAED,oB;;;;;;;;;AC1VA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,G;AACA,E;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oC;;AAEA;AACA;AACA;AACA,8B;AACA,IAAI;AACJ;AACA,EAAE;;AAEF;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;;AAEd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA,eAAe,WAAW;AAC1B;AACA;;;AAGQ","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4d0cf5696079ffe60414","import {Time, TIME, TWEEN} from './time.js';\r\n// import THREE from 'three';\r\n\r\n\r\nlet waveVertexShader = `\r\n    uniform float size;\r\n    uniform float frequency1;\r\n    uniform float frequency2;\r\n    uniform float offset1;\r\n    uniform float offset2;\r\n    uniform float waveHeight1;\r\n    uniform float waveHeight2;\r\n\r\n\r\n    void main() { \r\n        vec3 curPos;\r\n        curPos = vec3(position.x, 1, position.z);\r\n        curPos[1] = cos(position.x * frequency1 + offset1) * sin(position.z * frequency1 + offset1) * waveHeight1 + cos(position.x * frequency2 + offset2) * sin(position.z * frequency2 + offset2) * waveHeight2;\r\n\r\n\r\n        gl_PointSize = size;//min(size * curPos[1] * 0.2, 4.0);\r\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( curPos, 1.0 ); \r\n    }\r\n\r\n`;\r\n\r\nlet waveFragmentShader = `\r\n\r\n    uniform sampler2D texture; \r\n    uniform vec3 color; \r\n    uniform float opacity; \r\n    void main() { \r\n        \r\n        gl_FragColor = vec4(color, opacity) * texture2D( texture, gl_PointCoord ); \r\n    }\r\n\r\n`;\r\n\r\nlet pointImg = './point.png';\r\nlet pointCvs = document.createElement('canvas');\r\nlet pointCtx = pointCvs.getContext('2d');\r\n\r\npointCvs.width = 32;\r\npointCvs.height = 32;\r\n\r\nvar grd = pointCtx.createRadialGradient(16, 16, 5, 16, 16, 16);\r\ngrd.addColorStop(0, 'rgba(255, 255, 255, 0.3)');\r\ngrd.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n\r\npointCtx.fillStyle = grd;\r\npointCtx.fillRect(0, 0, 32, 32);\r\n// document.body.appendChild(pointCvs);\r\n\r\nclass Wave extends Time {\r\n    constructor(options) {\r\n        super();\r\n\r\n        let defaults = {\r\n            color: '#ffffff',\r\n            opacity: 1,\r\n            position: new THREE.Vector3,\r\n            xCount: 100,\r\n            zCount: 100,\r\n\r\n            xDis: 200,\r\n            zDis: 200,\r\n\r\n            size: 1, // 点大小\r\n            frequency1: 0.2,\r\n            frequency2: 0.1,\r\n\r\n            maxWaveHeight1: 10,\r\n            minWaveHeight1: 3,\r\n            maxWaveHeight2: 8,\r\n            minWaveHeight2: 5,\r\n\r\n            initOffset1: 0,\r\n            initOffset2: 0,\r\n            offsetSpeed1: 2,\r\n            offsetSpeed2: 4,\r\n            offsetSign: 1 // -1 or 1\r\n        };\r\n\r\n\r\n        for (let key in defaults) {\r\n            options[key] = options[key] || defaults[key];\r\n        }\r\n        options.xStep = options.xDis / options.xCount;\r\n        options.zStep = options.zDis / options.zCount;\r\n\r\n        this.options = options;\r\n\r\n        this.tick;\r\n\r\n        this.offset1 = options.initOffset1;\r\n        this.offset2 = options.initOffset2;\r\n\r\n        this.particlePositions;\r\n        this.obj = this.create();\r\n    }\r\n\r\n    create() {\r\n        let options = this.options;\r\n\r\n        let particlesGeom = new THREE.BufferGeometry();\r\n        let particlePositions = new Float32Array( options.xCount * options.zCount * 3 );\r\n\r\n        let uniforms = {\r\n\r\n            texture: {\r\n                value: new THREE.CanvasTexture(pointCvs)\r\n            },\r\n            color: {\r\n                value: new THREE.Color(options.color)\r\n            },\r\n            opacity: {\r\n                type: 'float',\r\n                value: options.opacity\r\n            },\r\n            size: {\r\n                type: 'float',\r\n                value: options.size * 10\r\n            },\r\n            frequency1: {\r\n                type: 'float',\r\n                value: options.frequency1\r\n            },\r\n            frequency2: {\r\n                type: 'float',\r\n                value: options.frequency2\r\n            },\r\n            offset1: {\r\n                type: 'float',\r\n                value: 0\r\n            },\r\n            offset2: {\r\n                type: 'float',\r\n                value: 0\r\n            },\r\n            waveHeight1: {\r\n                type: 'float',\r\n                value: 0\r\n            },\r\n            waveHeight2: {\r\n                type: 'float',\r\n                value: 0\r\n            }\r\n            \r\n\r\n        };\r\n\r\n        var shaderMaterial = new THREE.ShaderMaterial({\r\n\r\n            uniforms: uniforms,\r\n            vertexShader: waveVertexShader,\r\n            fragmentShader: waveFragmentShader,\r\n\r\n            blending: THREE.AdditiveBlending,\r\n            depthTest: false,\r\n            transparent: true\r\n\r\n        });\r\n\r\n\r\n        let count = 0;\r\n        for (let x = 0; x < options.xCount; x++) {\r\n            for (let z = 0; z < options.zCount; z++) {\r\n\r\n                particlePositions[count++] = x * options.xStep;\r\n                particlePositions[count++] = 0; // y\r\n                particlePositions[count++] = z * options.zStep;\r\n            }\r\n        }\r\n\r\n        this.particlePositions = particlePositions;\r\n\r\n        particlesGeom.setDrawRange( 0, options.xCount * options.zCount );\r\n        particlesGeom.addAttribute( 'position', new THREE.BufferAttribute( particlePositions, 3 ).setDynamic( true ) );\r\n        particlesGeom.computeBoundingBox();\r\n        particlesGeom.center();\r\n\r\n        let points = new THREE.Points(particlesGeom, shaderMaterial);\r\n        points.position.copy(options.position);\r\n        points.rotation.y = Math.random() * 0.2;\r\n        \r\n        return points;\r\n    }\r\n\r\n    start() {\r\n        this.tick = this.addTick(this.update);\r\n\r\n        let that = this;\r\n        function changeWHP() {\r\n            that.obj.material.uniforms.waveHeight1.value = this.waveHeight1;\r\n            that.obj.material.uniforms.waveHeight2.value = this.waveHeight2;\r\n        }\r\n\r\n        let waveHeight = {\r\n            waveHeight1: this.options.minWaveHeight1,\r\n            waveHeight2: this.options.minWaveHeight2\r\n        };\r\n        let tween1 = new TWEEN.Tween(waveHeight)\r\n                        .to({\r\n                            waveHeight1: this.options.maxWaveHeight1,\r\n                            waveHeight2: this.options.maxWaveHeight2,\r\n                        }, 3000)\r\n                        .easing(TWEEN.Easing.Cubic.InOut)\r\n                        .onUpdate(changeWHP);\r\n                        \r\n        let tween2 = new TWEEN.Tween(waveHeight)\r\n                        .to({\r\n                            waveHeight1: this.options.minWaveHeight1,\r\n                            waveHeight2: this.options.minWaveHeight2\r\n                        }, 3000)\r\n                        .easing(TWEEN.Easing.Cubic.InOut)\r\n                        .onUpdate(changeWHP);\r\n        \r\n        this.addTween(tween1);\r\n        // this.addTween(tween2);\r\n        tween1.chain(tween2);\r\n        tween2.chain(tween1);\r\n        tween1.start();\r\n                        \r\n    }\r\n\r\n    stop() {\r\n        this.removeTick(this.tick);\r\n    }\r\n\r\n    update(delta) {\r\n        let options = this.options;\r\n        let second = delta / 1000;\r\n        let particlePositions = this.particlePositions;\r\n\r\n        this.obj.material.uniforms.offset1.value += second * options.offsetSpeed1 * options.offsetSign;\r\n        this.obj.material.uniforms.offset2.value += second * options.offsetSpeed2 * options.offsetSign;\r\n    }\r\n}\r\n\r\nclass Ani extends Time {\r\n\r\n    constructor() {\r\n        super();\r\n        this.waves = [];\r\n        this.tick;\r\n\r\n        this.scene = new THREE.Scene();//场景\r\n\r\n        this.camera = new THREE.PerspectiveCamera(60, window.innerWidth / window.innerHeight, 0.1, 1000);//透视相机\r\n        this.camera.position.set(0, 6, 150);//相机位置\r\n        this.scene.add(this.camera);//add到场景中\r\n        // this.scene.fog = new THREE.Fog(0x000000, 100, 500);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({antialias: true , alpha: true});//渲染\r\n        this.renderer.setClearColor(0x000000, 0);\r\n        this.renderer.setSize(window.innerWidth, window.innerWidth * 9 / 16);\r\n        document.querySelector('body').appendChild(this.renderer.domElement);//将渲染Element添加到Dom中\r\n    }\r\n\r\n    resize() {\r\n        // console.log(1);\r\n        this.camera.aspect = 16 / 9;\r\n        this.renderer.setSize(window.innerWidth, window.innerWidth * 9 / 16);\r\n    }\r\n\r\n    addWave(wave) {\r\n        this.waves.push(wave);\r\n        this.scene.add(wave.obj);\r\n    }\r\n\r\n    start() {\r\n        this.waves.forEach(w=>w.start());\r\n        this.tick = this.addTick(this.update);\r\n    }\r\n\r\n    stop() {\r\n        this.removeTick(this.tick);\r\n    }\r\n\r\n    update() {\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n}\r\n\r\nlet wave1 = new Wave({\r\n    color: 0x3062ff,\r\n    opacity: 0.7,\r\n    position: new THREE.Vector3,\r\n    xCount: 300,\r\n    zCount: 300,\r\n    xDis: 200, // x 宽\r\n    zDis: 200, // z 宽\r\n    size: 0.6, // 点大小\r\n    frequency1: 0.03,\r\n    frequency2: 0.06,\r\n\r\n    maxWaveHeight1: 10,\r\n    minWaveHeight1: 3,\r\n    maxWaveHeight2: 8,\r\n    minWaveHeight2: 5,\r\n\r\n    initOffset1: 0,\r\n    initOffset2: 0,\r\n    offsetSpeed1: 0.6,\r\n    offsetSpeed2: 0.4,\r\n    offsetSign: 1 // -1 or 1\r\n});\r\nlet wave2 = new Wave({\r\n    color: 0x3bdee0,\r\n    opacity: 0.2,\r\n    position: new THREE.Vector3(0, 6, -50),\r\n    xCount: 180,\r\n    zCount: 180,\r\n    xDis: 200, // x 宽\r\n    zDis: 200, // z 宽\r\n    size: 0.4, // 点大小\r\n    frequency1: 0.06,\r\n    frequency2: 0.052,\r\n\r\n    maxWaveHeight1: 8,\r\n    minWaveHeight1: 4,\r\n    maxWaveHeight2: 6,\r\n    minWaveHeight2: 4,\r\n\r\n    initOffset1: 0,\r\n    initOffset2: 0,\r\n    offsetSpeed1: 0.3,\r\n    offsetSpeed2: 0.1,\r\n    offsetSign: -1 // -1 or 1\r\n});\r\n\r\n\r\n\r\n\r\nlet ani = new Ani();\r\nani.addWave(wave1);\r\nani.addWave(wave2);\r\n\r\nani.start();\r\n\r\n\r\nwindow.addEventListener('resize', () => {\r\n    // console.log(1132);\r\n    ani.resize()\r\n});\r\n\r\nwindow.TIME.start();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 0\n// module chunks = 0","// import TWEEN from 'tween.js';\n\n/* 时间 */\nvar TIME = {\n\t// 所有时间body对象\n\tbodys : [],\n\tdelta: 16\n}\n\nvar stop = false;\nvar t;\nTIME.addBody = function(timeBody) {\n\tthis.bodys.push(timeBody);\n}\n\nTIME.removeBody = function(timeBody) {\n\tvar index = this.bodys.indexOf(timeBody);\n\n\tif (index !== -1) {\n\t\tthis.bodys.splice(index, 1);\n\t}\n}\nTIME.tick = (function() {\n\tvar now = (new Date()).getTime();\n\tvar last = now;\n\tvar delta;\n\treturn function() {\n\t\tdelta = now - last;\n\t\tdelta = delta > 500 ? 30 : (delta < 16? 16 : delta);\n\t\tTIME.delta = delta;\n\t\tlast = now;\n\n\t\tTIME.handleFrame(delta);\n\t\tif (!stop) {\n\t\t\tt = requestAnimationFrame(TIME.tick);\n\t\t\t// setTimeout(TIME.tick, 1000);\n\t\t}\t\t\n\t}\t\n})();\n\n\nTIME.start = function() {\n\tstop = false;\n\tcancelAnimationFrame(t);\n\tthis.tick();\n}\n\nTIME.stop = function() {\n\tcancelAnimationFrame(t);\n\tstop = true;\n}\n\nTIME.handleFrame = function(delta) { \n\n\tTIME.bodys.forEach(function(body) {\n\t\tif (!body.isStop) {\n\t\t\tbody.ticks.forEach(function(tick) {\n\t\t\t\ttick.fn && tick.fn(delta); \n\t\t\t});\n\t\t}\n\t});\n\n\tTWEEN.update();\n}\n\nwindow.TIME = TIME;\n\n/* 时间物体类，提供两个时机，帧更新，固定间隔更新，每一个有时间概念的物体，就继承 */\nclass Time {\n\n\tconstructor() {\n\t\tthis.ticks = [];\n\t\tthis.tweens = [];\n\t\tthis.isStop = false;\n\t\tTIME.addBody(this);\n\t}\n\n\n\t/**\n\t * 该物体灭亡\n\t */\n\tdestory() {\n\t\tTIME.removeBody(this);\n\t}\n\n\t/** \n\t * 帧更新\n\t * @param timegap 与上一帧的时间间隔\n\t */\n\taddTick(fn) {\n\t\tvar tick = {'fn': fn.bind(this)};\n\n\t\ttick.isStop = false;\n\t\tthis.ticks.push(tick);\n\t\treturn tick;\n\t}\n\n\tremoveTick(tick) {\n\t\tif (!tick) {\n\t\t\t// remove all\n\t\t\tthis.ticks = [];\n\t\t\treturn;\n\t\t}\n\n\t\tvar index = this.ticks.indexOf(tick);\n\n\t\tif (index !== -1) {\n\t\t\tthis.ticks.splice(index, 1);\n\t\t}\n\t}\n\n\t/** \n\t * tween\n\t */\n\taddTween(tween) {\n\t\tthis.tweens.push(tween);\n\t}\n\n\tremoveTween(tween) {\n\t\tif (!tween) {\n\t\t\t// remove all\n\t\t\tthis.tween = [];\n\t\t\treturn;\n\t\t}\n\n\t\tvar index = this.tweens.indexOf(tween);\n\n\t\tif (index !== -1) {\n\t\t\t//tween.stop();\n\t\t\tthis.tweens.splice(index, 1);\n\t\t}\n\t}\n\n\t// stop 暂停时间\n\tstop() {\n\t\tthis.isStop = true;\n\t\tthis.tweens.forEach(function(tween) {\n\t\t\ttween.stop();\n\t\t});\n\t}\n\n\tstart() {\n\t\tthis.isStop = false;\n\t\tthis.tweens.forEach(function(tween) {\n\t\t\ttween.start();\n\t\t});\n\t}\n}\n\nwindow.Time = Time;\n\nfor (let i = 0; i < 10000; i+=100) {\n\twindow['TIME_' + i] = window.env === 'develop' ? 0 : i;\n}\n\n\nexport {TIME, Time, TWEEN};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./time.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}